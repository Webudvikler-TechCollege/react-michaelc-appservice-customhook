{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\TechCollege\\\\appservices\\\\src\\\\pages\\\\Events\\\\Events.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport userService from \"../../Appservices/App.service\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Events = () => {\n  _s();\n\n  const [stages, setStages] = useState([]); //belongs to pagination\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [PerPage, setPerPage] = useState(10);\n  useEffect(() => {\n    async function fetchResults() {\n      try {\n        const response = await userService.getAll(\"events\");\n\n        if (response.data) {\n          setStages(response.data.items);\n          console.log(response.data.items);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchResults();\n  }, []); // Get current posts belongs to pagination\n\n  const indexOfLast = currentPage * PerPage;\n  const indexOfFirst = indexOfLast - PerPage;\n  const current = songs && songs.slice(indexOfFirst, indexOfLast); // Change page  belongs to pagination\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: stages.map((stage, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/events/${stage.id}`,\n        children: stage.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Events, \"9cA4z4mVQailn2HPW6pPkHuCHrA=\");\n\n_c = Events;\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["useEffect","useState","userService","Link","Events","stages","setStages","currentPage","setCurrentPage","PerPage","setPerPage","fetchResults","response","getAll","data","items","console","log","e","indexOfLast","indexOfFirst","current","songs","slice","paginate","pageNumber","map","stage","i","id","title"],"sources":["C:/wamp64/www/TechCollege/appservices/src/pages/Events/Events.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport userService from \"../../Appservices/App.service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Events = () => {\r\n  const [stages, setStages] = useState([]);\r\n\r\n    //belongs to pagination\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [PerPage, setPerPage] = useState(10);\r\n\r\n  useEffect(() => {\r\n    async function fetchResults() {\r\n      try {\r\n        const response = await userService.getAll(\"events\");\r\n\r\n        if (response.data) {\r\n          setStages(response.data.items);\r\n          console.log(response.data.items);\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    fetchResults();\r\n  }, []);\r\n\r\n    // Get current posts belongs to pagination\r\n    const indexOfLast = currentPage * PerPage;\r\n    const indexOfFirst = indexOfLast - PerPage;\r\n    const current = songs && songs.slice(indexOfFirst, indexOfLast);\r\n    // Change page  belongs to pagination\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <ul>\r\n      {stages.map((stage, i) => (\r\n        <li key={i}>\r\n          <Link to={`/events/${stage.id}`}>{stage.title}</Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CADmB,CAGjB;;EACA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;EAEFD,SAAS,CAAC,MAAM;IACd,eAAeW,YAAf,GAA8B;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,WAAW,CAACW,MAAZ,CAAmB,QAAnB,CAAvB;;QAEA,IAAID,QAAQ,CAACE,IAAb,EAAmB;UACjBR,SAAS,CAACM,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAT;UACAC,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACE,IAAT,CAAcC,KAA1B;QACD;MACF,CAPD,CAOE,OAAOG,CAAP,EAAU;QACVF,OAAO,CAACC,GAAR,CAAYC,CAAZ;MACD;IACF;;IACDP,YAAY;EACb,CAdQ,EAcN,EAdM,CAAT,CAPmB,CAuBjB;;EACA,MAAMQ,WAAW,GAAGZ,WAAW,GAAGE,OAAlC;EACA,MAAMW,YAAY,GAAGD,WAAW,GAAGV,OAAnC;EACA,MAAMY,OAAO,GAAGC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYH,YAAZ,EAA0BD,WAA1B,CAAzB,CA1BiB,CA2BjB;;EACA,MAAMK,QAAQ,GAAIC,UAAD,IAAgBjB,cAAc,CAACiB,UAAD,CAA/C;;EAEF,oBACE;IAAA,UACGpB,MAAM,CAACqB,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,kBACV;MAAA,uBACE,QAAC,IAAD;QAAM,EAAE,EAAG,WAAUD,KAAK,CAACE,EAAG,EAA9B;QAAA,UAAkCF,KAAK,CAACG;MAAxC;QAAA;QAAA;QAAA;MAAA;IADF,GAASF,CAAT;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAvCD;;GAAMxB,M;;KAAAA,M;AAyCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}